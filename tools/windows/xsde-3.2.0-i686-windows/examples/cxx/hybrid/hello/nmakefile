root = ..\..\..\..

!include $(root)\build\cxx\rules.nmake

# Build.
#
EXTRA_CPPFLAGS = /I$(root)\libxsde

!if "$(XSDE_ENCODING)" == "iso8859-1"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --char-encoding iso8859-1
!endif

!if "$(XSDE_STL)" == "n"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --no-stl
!endif

!if "$(XSDE_LONGLONG)" == "n"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --no-long-long
!endif

!if "$(XSDE_PARSER_VALIDATION)" == "n"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --suppress-parser-val
!endif

!if "$(XSDE_REUSE_STYLE)" == "mixin"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --reuse-style-mixin
!endif

!if "$(XSDE_POLYMORPHIC)" == "y"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --runtime-polymorphic
!endif

driver.exe: driver.obj hello.obj hello-pskel.obj hello-pimpl.obj \
$(root)\libxsde\xsde\xsde.lib

driver.obj: driver.cxx hello.hxx hello-pimpl.hxx
hello.obj: hello.cxx
hello-pskel.obj: hello-pskel.cxx
hello-pimpl.obj: hello-pimpl.cxx

hello.cxx hello.hxx hello-pskel.cxx hello-pskel.hxx \
hello-pimpl.cxx hello-pimpl.hxx: hello.xsd
	$(root)\bin\xsde.exe cxx-hybrid $(XSDFLAGS) $(EXTRA_XSDFLAGS) \
--generate-parser --generate-aggregate hello.xsd


# Generate.
#
gen: hello.hxx


# Test.
#
test: driver.exe hello.xml
	.\driver.exe hello.xml

# Clean.
#
cleanobj:
	-del hello-pimpl.obj hello-pskel.obj hello.obj driver.obj driver.exe

clean: cleanobj
	-del hello-pimpl.?xx hello-pskel.?xx hello.?xx
