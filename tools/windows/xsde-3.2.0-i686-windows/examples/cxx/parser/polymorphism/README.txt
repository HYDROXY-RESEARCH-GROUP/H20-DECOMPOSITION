This example shows how to handle the XML Schema polymorphism features such
as xsi:type attributes and substitution groups in the Embedded C++/Parser
mapping. The case where xsi:type or substitution groups are used on document
root elements is covered in the polyroot examples.

The example consists of the following files:

supermen.xsd
  XML Schema which describes supermen instance documents.

supermen.xml
  Sample XML instance document.

supermen-pskel.hxx
supermen-pskel.cxx
  Parser skeletons generated by the XSD/e compiler from supermen.xsd.
  Note the use of the --generate-polymorphic command line option.

supermen-pimpl-mixin.hxx
supermen-pimpl-mixin.cxx

supermen-pimpl-tiein.hxx
supermen-pimpl-tiein.cxx
  Parser implementations (using either mixin or tiein parser reuse
  style) that print the XML data to STDOUT.

driver.cxx
  Driver for the example. It first constructs a parser instance from
  all the individual parsers found in one of supermen-pimpl-*.hxx. It
  then invokes this parser instance to parse the input file.

To run the example on the sample XML instance document simply execute:

$ ./driver supermen.xml

The example reads from STDIN if input file is not specified:

$ ./driver <supermen.xml
