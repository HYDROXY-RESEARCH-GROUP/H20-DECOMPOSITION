root = ..\..\..\..

!include $(root)\build\cxx\rules.nmake

# Build.
#
EXTRA_CPPFLAGS = /I$(root)\libxsde

EXTRA_XSDFLAGS = --no-stl --no-exceptions

!if "$(XSDE_ENCODING)" == "iso8859-1"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --char-encoding iso8859-1
!endif

!if "$(XSDE_IOSTREAM)" == "n"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --no-iostream
!endif

!if "$(XSDE_LONGLONG)" == "n"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --no-long-long
!endif

!if "$(XSDE_PARSER_VALIDATION)" == "n"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --suppress-validation
!endif

!if "$(XSDE_REUSE_STYLE)" == "mixin"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --reuse-style-mixin
!endif

!if "$(XSDE_POLYMORPHIC)" == "y"
EXTRA_XSDFLAGS = $(EXTRA_XSDFLAGS) --runtime-polymorphic
!endif

!if "$(XSDE_REUSE_STYLE)" == "mixin"
impl = people-pimpl-mixin
!else
impl = people-pimpl-tiein
!endif

driver.exe: driver.obj people-pskel.obj $(root)\libxsde\xsde\xsde.lib

driver.obj: driver.cxx $(impl).hxx people-pskel.hxx gender.hxx
people-pskel.obj: people-pskel.cxx people-pskel.hxx gender.hxx

people-pskel.cxx people-pskel.hxx: people.xsd people.map
	$(root)\bin\xsde.exe cxx-parser $(XSDFLAGS) $(EXTRA_XSDFLAGS) \
--type-map people.map people.xsd


# Generate.
#
gen: people-pskel.hxx


# Test.
#
test: driver.exe people.xml
	.\driver.exe people.xml


# Clean.
#
cleanobj:
	-del people-pskel.obj driver.obj driver.exe

clean: cleanobj
	-del people-pskel.?xx

